name: Build

on: [ push, pull_request ]

env:
  CORE_CHANGED: false
  APP_CHANGED: false
  PYTHON_VENV_ROOT: ${{ github.workspace }}/src/python-venv

jobs:
  install-metadynminer:
    name: ${{ matrix.os }}, python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
#        exclude:
#          - os: macos-latest
#            python-version: "3.7"

    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,defaults

      - name: Install dependencies on macOS
        if startsWith(matrix.os, 'macos')
        run: |
          python3 -m venv ${PYTHON_VENV_ROOT}
          source ${PYTHON_VENV_ROOT}/bin/activate
          python --version
          python3 -m pip install --upgrade pip
          python3 -m pip install pytest pytest-cov
          python3 -m pip install -e .

      - name: Install dependencies
        if startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'windows')
        run: |
          python --version
          python3 -m pip install --upgrade pip
          pip3 install pytest pytest-cov
          pip3 install -e .

      - name: Run tests on ${{ matrix.os }}
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            python3 -m venv ${PYTHON_VENV_ROOT}
            source ${PYTHON_VENV_ROOT}/bin/activate
          fi
          echo -e "Running tests"
          pytest tests/*.py

      - name: Run tests on Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          echo "Running tests"
          Get-ChildItem -Path tests -Recurse -Filter *.py | ForEach-Object {
            pytest $_.FullName
          }
